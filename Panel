bl_info = {
    "name": "Plantilla base blender",
    "author": "Álvaro Gómez-Rey y Pablo Vera",
    "version": (1, 0),
    "blender": (3, 2, 2),
    "location": "Render",
    "description": "Programa para cambiar los nombres de los objetos seleccionados de la escena. Permite buscar y remplazar una cadena de texto contenida en el nombre y/o añadir un prefijo/sufijo",
    "warning": "",
    "doc_url": "",
    "category": "Edit names",
}

import bpy
import mathutils
from bpy.props import (StringProperty,PointerProperty,
                       )
                       
from bpy.types import (Panel,
                       PropertyGroup,
                       )
import os

os.system("cls") #clear de la consola
#--------------------------------------------------------FUNCIONES-------------------------------------------------------------

def InsertarPrefijo(context):
    if(len(bpy.context.scene.Prefijo) > 0):
        for ob in bpy.context.selected_objects:
            ob.name = bpy.context.scene.Prefijo + ob.name
        
def InsertarSufijo(context):
    if(len(bpy.context.scene.Sufijo) > 0):
        for ob in bpy.context.selected_objects:
            ob.name += bpy.context.scene.Sufijo    
        
def BuscarRemplazar(context):
    if(len(bpy.context.scene.Buscar) > 0):
        bpy.ops.object.select_all(action='DESELECT')
        aux = []
        for ob in bpy.data.objects:
            if ob.name.find(bpy.context.scene.Buscar) != -1:
                ob.select_set(True)
                if(bpy.context.scene.BoolRemplazar):
                    aux.append(ob)
                              
        for x in aux:
            x.name = x.name.replace(bpy.context.scene.Buscar, bpy.context.scene.Remplazar, 1)
            
def Renombrar(context):
    if(len(bpy.context.scene.Renombrar) > 0):
        for ob in bpy.context.selected_objects:
            ob.name = bpy.context.scene.Renombrar

#--------------------------------------------------------INTERFAZ GRÁFICA------------------------------------------------------

class OperadorPrefijo(bpy.types.Operator):
    """Tooltip"""
    bl_idname = "object.operator_prefijo"
    bl_label = "Añadir prefijo"

    def execute(self, context):
        InsertarPrefijo(context)
        return {'FINISHED'}
    
class OperadorSufijo(bpy.types.Operator):
    """Tooltip"""
    bl_idname = "object.operator_sufijo"
    bl_label = "Añadir sufijo"

    def execute(self, context):
        InsertarSufijo(context)
        return {'FINISHED'}
    
class OperadorBuscarRemplazar(bpy.types.Operator):
    """Tooltip"""
    bl_idname = "object.operator_remplazar"
    bl_label = "Buscar y Remplazar"

    def execute(self, context):
        BuscarRemplazar(context)
        return {'FINISHED'}
    
class OperadorRenombrar(bpy.types.Operator):
    """Tooltip"""
    bl_idname = "object.operator_renombrar"
    bl_label = "Renombrar"

    def execute(self, context):
        Renombrar(context)
        return {'FINISHED'}

def menu_func(self, context):
    self.layout.operator(OperadorPrefijo.bl_idname, text=OperadorPrefijo.bl_label)
    self.layout.operator(OperadorSufijo.bl_idname, text=OperadorSufijo.bl_label)
    self.layout.operator(OperadorBuscarRemplazar.bl_idname, text=OperadorBuscarRemplazar.bl_label)
    self.layout.operator(OperadorRenombrar.bl_idname, text=OperadorRenombrar.bl_label)

# Register and add to the "object" menu (required to also use F3 search "Simple Object Operator" for quick access)
def register():
    bpy.utils.register_class(OperadorPrefijo)
    bpy.utils.register_class(OperadorSufijo)
    bpy.utils.register_class(OperadorBuscarRemplazar)
    bpy.utils.register_class(OperadorRenombrar)
    bpy.types.VIEW3D_MT_object.append(menu_func)
    
    bpy.types.Scene.Prefijo = bpy.props.StringProperty(
        name="Prefijo",
        description=":",
        default="",
        maxlen=1024,
        )

    bpy.types.Scene.Sufijo = bpy.props.StringProperty(
        name="Sufijo",
        description=":",
        default="",
        maxlen=1024,
        )
        
    bpy.types.Scene.Buscar = bpy.props.StringProperty(
        name="Buscar",
        description=":",
        default="",
        maxlen=1024,
        )
        
    bpy.types.Scene.Remplazar = bpy.props.StringProperty(
        name="por",
        description=":",
        default="",
        maxlen=1024,
        )
        
    bpy.types.Scene.Renombrar = bpy.props.StringProperty(
        name="Renombrar",
        description=":",
        default="",
        maxlen=1024,
        )
        
    bpy.types.Scene.BoolRemplazar = bpy.props.BoolProperty(
        name = "Remplazar",
        description=":",
        default = False
        )
        

def unregister():
    bpy.utils.unregister_class(OperadorPrefijo)
    bpy.utils.unregister_class(OperadorSufijo)
    bpy.utils.unregister_class(OperadorBuscarRemplazar)
    bpy.utils.unregister_class(OperadorRenombrar)
    bpy.types.VIEW3D_MT_object.remove(menu_func)
    del bpy.types.Scene.Prefijo
    del bpy.types.Scene.Sufijo
    del bpy.types.Scene.Buscar
    del bpy.types.Scene.Remplazar
    del bpy.types.Scene.Renombrar
    del bpy.types.Scene.BoolRemplazar


if __name__ == "__main__":
    register()

    # test call xd
    #bpy.ops.object.simple_operator()

#interfaz grafica 


class LayoutDemoPanel(bpy.types.Panel):
    """Creates a Panel in the scene context of the properties editor"""
    bl_label = "Name Editor"
    bl_idname = "SCENE_PT_layout"
    bl_space_type = 'PROPERTIES'
    bl_region_type = 'WINDOW'
    bl_context = "scene"

    def draw(self, context):
        layout = self.layout
        scene = context.scene

        box = layout.box()
        box.label(text="Añadir un prefijo a los objetos seleccionados")
        row = box.row()
        row.prop(scene, 'Prefijo')
        row = box.row()
        row.scale_y = 1.0
        row.operator("object.operator_prefijo")
        
        box = layout.box()
        box.label(text="Añadir un sufijo a los objetos seleccionados")
        row = box.row()
        row.prop(scene, 'Sufijo')
        row = box.row()
        row.scale_y = 1.0
        row.operator("object.operator_sufijo")
        
        box = layout.box()
        box.label(text="Permite buscar nombres y reemplazarlos")
        row = box.row()
        row.prop(scene, 'Buscar')
        row = box.row()
        row.prop(scene, 'BoolRemplazar')
        if(bpy.context.scene.BoolRemplazar):
            row.prop(scene, 'Remplazar')
        row = box.row()
        row.scale_y = 1.0
        row.operator("object.operator_remplazar")
        
        box = layout.box()
        layout.label(text="Renombra todos los objetos seleccionados")
        row = box.row()
        row.prop(scene, 'Renombrar')
        row = box.row()
        row.scale_y = 1.0
        row.operator("object.operator_renombrar")


def register():
    bpy.utils.register_class(LayoutDemoPanel)


def unregister():
    bpy.utils.unregister_class(LayoutDemoPanel)


if __name__ == "__main__":
    register()